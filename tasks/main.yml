---
# tasks file for ansible-role-mongodb

- name: "Include vars/{{ ansible_os_family }}.yml"
  include_vars: "{{ ansible_os_family }}.yml"

- name: "Include install-{{ ansible_os_family }}.yml"
  include: "install-{{ ansible_os_family }}.yml"

- name: Create log directory
  file:
    path: "{{ mongodb_log_dir }}"
    mode: 0755
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
    state: directory
  notify: Restart mongodb

- name: Create mongodb_db_dir directory
  file:
    path: "{{ mongodb_db_dir }}"
    mode: 0755
    owner: "{{ mongodb_user }}"
    group: "{{ mongodb_group }}"
    state: directory
  notify: Restart mongodb

- name: See if admin user exists
  command: >
    mongo --quiet \
      -u {{ mongodb_admin_users[0].name }} \
      -p {{ mongodb_admin_users[0].password }} \
      --host {{ mongodb_host }} \
      --port {{ mongodb_port }} \
      --eval 'db.version()' admin
  changed_when: no
  failed_when: no
  check_mode: no
  ignore_errors: yes
  no_log: "{% if mongodb_debug %}no{% else %}yes{% endif %}"
  register: __register_check_admin

- name: Include init-auth.yml
  include: init-auth.yml
  when:
    - __register_check_admin.rc != 0

- name: Create mongodb.conf
  template:
    src: mongod.conf.j2
    dest: "{{ mongodb_conf_file }}"
  notify: Restart mongodb

- name: Create or remove mongodb_users and mongodb_admin_users
  mongodb_user:
    database: "{{ item.database }}"
    login_database: "{{ item.login_database | default(omit) }}"
    login_host: "{{ item.login_host | default(mongodb_host) }}"
    login_password: "{{ item.login_password | default(mongodb_admin_users[0].password) }}"
    login_port: "{{ item.login_port | default(mongodb_port) }}"
    login_user: "{{ item.login_user | default(mongodb_admin_users[0].name) }}"
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    roles: "{{ item.roles | default(omit) }}"
    ssl_cert_reqs: "{{ item.ssl_cert_reqs | default('CERT_REQUIRED') }}"
    ssl: "{{ item.ssl | default('no') }}"
    state: "{{ item.state | default('present') }}"
    update_password: "{{ item.update_password | default(omit) }}"
  no_log: "{% if mongodb_debug %}no{% else %}yes{% endif %}"
  with_items:
    - "{{ mongodb_users }}"
    - "{{ mongodb_admin_users }}"

- name: Start mongod
  service:
    name: "{{ mongodb_service }}"
    state: started
